// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NntDay09LabCF.Models;

#nullable disable

namespace NntDay09LabCF.Migrations
{
    [DbContext(typeof(NntDay09LabCFContext))]
    [Migration("20251022160848_Change_MaLoai_ToString")]
    partial class Change_MaLoai_ToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NntDay09LabCF.Models.Nnt_LoaiSanPham", b =>
                {
                    b.Property<int>("nntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("nntId"));

                    b.Property<string>("nntMaLoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("nntTenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("nntId");

                    b.ToTable("Nnt_LoaiSanPham");
                });

            modelBuilder.Entity("NntDay09LabCF.Models.Nnt_SanPham", b =>
                {
                    b.Property<int>("nntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("nntId"));

                    b.Property<int?>("Nnt_LoaiSanPhamnntId")
                        .HasColumnType("int");

                    b.Property<decimal>("nntDonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("nntHinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nntMaLoai")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<string>("nntMaSanPham")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("nntSoLuong")
                        .HasColumnType("int");

                    b.Property<string>("nntTenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("nntTrangThai")
                        .HasColumnType("bit");

                    b.HasKey("nntId");

                    b.HasIndex("Nnt_LoaiSanPhamnntId");

                    b.ToTable("Nnt_SanPham");
                });

            modelBuilder.Entity("NntDay09LabCF.Models.Nnt_SanPham", b =>
                {
                    b.HasOne("NntDay09LabCF.Models.Nnt_LoaiSanPham", "Nnt_LoaiSanPham")
                        .WithMany("Nnt_SanPhams")
                        .HasForeignKey("Nnt_LoaiSanPhamnntId");

                    b.Navigation("Nnt_LoaiSanPham");
                });

            modelBuilder.Entity("NntDay09LabCF.Models.Nnt_LoaiSanPham", b =>
                {
                    b.Navigation("Nnt_SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
